{"version":3,"file":"index-DmtQNISZ.js","sources":["../../src/scripts/components/Component.js","../../src/scripts/utils/screenReader.js","../../src/scripts/utils/formatDate.js","../../src/scripts/utils/Notes.js","../../src/scripts/views/NoteDetails.js","../../src/scripts/utils/Router.js","../../src/scripts/components/Navbar.js","../../src/scripts/views/home.js","../../src/scripts/views/notes.js","../../src/scripts/components/InstallButton.js","../../src/App.js","../../src/main.js"],"sourcesContent":["export class Component {\r\n    constructor(props = {}) {\r\n        this.props = props;\r\n        this.state = {};\r\n        this.element = null;\r\n    }\r\n\r\n    setState(newState) {\r\n        this.state = { ...this.state, ...newState };\r\n        this.update();\r\n    }\r\n\r\n    createElement(template) {\r\n        const wrapper = document.createElement('div');\r\n        wrapper.innerHTML = template.trim();\r\n        return wrapper.firstElementChild;\r\n    }\r\n\r\n    render() {\r\n        return this.createElement('<div></div>');\r\n    }\r\n\r\n    mount(container) {\r\n        this.element = this.render();\r\n        container.appendChild(this.element);\r\n        this.afterMount?.();\r\n    }\r\n\r\n    update() {\r\n        const newElement = this.render();\r\n        if (this.element && this.element.parentNode) {\r\n            this.element.parentNode.replaceChild(newElement, this.element);\r\n            this.element = newElement;\r\n            this.afterMount?.();\r\n        }\r\n    }\r\n\r\n    unmount() {\r\n        this.beforeUnmount?.();\r\n        this.element?.remove();\r\n        this.element = null;\r\n    }\r\n\r\n    afterMount() { }\r\n    beforeUnmount() { }\r\n}","export class ScreenReader {\r\n    constructor() {\r\n        this.liveRegion = this.createLiveRegion();\r\n    }\r\n\r\n    createLiveRegion() {\r\n        let region = document.getElementById('sr-live');\r\n        if (!region) {\r\n            region = document.createElement('div');\r\n            region.id = 'sr-live';\r\n            region.setAttribute('aria-live', 'polite');\r\n            region.setAttribute('aria-atomic', 'true');\r\n            region.style.cssText = `\r\n                position: absolute;\r\n                left: -9999px;\r\n                height: 1px;\r\n                width: 1px;\r\n                overflow: hidden;\r\n            `;\r\n            document.body.appendChild(region);\r\n        }\r\n        return region;\r\n    }\r\n\r\n    announce({ title, description }) {\r\n        document.title = title || 'Take Me | Notes';\r\n        this.liveRegion.textContent = description || title;\r\n    }\r\n}\r\n\r\nexport const screenReader = new ScreenReader();","const currentDate = new Date();\r\nexport function fetchCurrentDate() {\r\n    const year = currentDate.getFullYear();\r\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\r\n    const day = String(currentDate.getDate()).padStart(2, '0');\r\n\r\n    const todayDate = `${year}-${month}-${day}`\r\n    return todayDate\r\n    // Example output: \"2025-09-16 17:45:00\"\r\n}\r\n\r\nexport function fetchCurrentTime() {\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    const currentTime = `${hours}:${minutes}:${seconds}`;\r\n\r\n    return currentTime\r\n}","export function fetchNotes() {\r\n    return JSON.parse(localStorage.getItem('take-me-notes-storage')) || []\r\n}\r\n\r\n\r\nexport function createNewNotes(noteData) {\r\n    const notes = fetchNotes()\r\n    const note = noteData\r\n    notes.push(note)\r\n\r\n    localStorage.setItem('take-me-notes-storage', JSON.stringify(notes))\r\n}\r\n\r\nexport function renderNoteDetails(noteId) {\r\n\r\n}","import { Component } from \"../components/Component\";\r\nimport { fetchCurrentDate, fetchCurrentTime } from \"../utils/formatDate\";\r\nimport { fetchNotes, createNewNotes, renderNoteDetails } from \"../utils/Notes\";\r\n\r\nexport class NoteDetailView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.noteId = props?.noteId || window.location.hash.split('/')[2];\r\n        const notes = fetchNotes();\r\n        const note = notes.find(n => n.id === this.noteId);\r\n        this.state = {\r\n            note,\r\n            mode: 'view'\r\n        };\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.note) {\r\n            return this.createElement(`\r\n                <div class=\"note-detail-view loading\">\r\n                    <div class=\"loading-spinner\"></div>\r\n                </div>\r\n            `);\r\n        }\r\n\r\n        return this.createElement(/* html */`\r\n            <div class=\"note-detail-view\">\r\n                <header class=\"note-header\">\r\n                    <button class=\"back-button\" aria-label=\"Go back\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M19 12H5M12 19l-7-7 7-7\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <button class=\"btn delete-button\" aria-label=\"Delete note\">\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M3 6h18M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" stroke-width=\"2\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <button class=\"edit-toggle-btn header-actions ${this.state.mode === 'edit' ? 'save-btn' : ' edit-btn'}\">\r\n                        ${this.state.mode === 'edit' ? 'Save' : 'Edit'}\r\n                    </button>\r\n                </header>\r\n                <main class=\"note-content\">\r\n                    ${this.state.mode === 'edit' ? /* html */`\r\n                        <input type=\"text\"\r\n                               class=\"note-title-input\"\r\n                               value=\"${this.state.note.title}\"\r\n                               placeholder=\"Note title\"\r\n                        />\r\n                        <textarea class=\"note-content-input\"\r\n                                  placeholder=\"Start writing...\">${this.state.note.content}</textarea>\r\n                    ` : /* html */`\r\n                        <h1 class=\"note-title\">${this.state.note.title}</h1>\r\n                        <div class=\"note-content\">${this.state.note.content}</div>\r\n                    `}\r\n                </main>\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    afterMount() {\r\n        // Back button\r\n        const backBtn = this.element.querySelector('.back-button');\r\n        backBtn?.addEventListener('click', () => window.history.back());\r\n\r\n        // Delete button\r\n        const deleteBtn = this.element.querySelector('.delete-button');\r\n        deleteBtn?.addEventListener('click', () => this.handleDelete());\r\n\r\n        // Edit/Save toggle\r\n        const editToggleBtn = this.element.querySelector('.edit-toggle-btn');\r\n        editToggleBtn?.addEventListener('click', () => {\r\n            if (this.state.mode === 'edit') {\r\n                this.handleSave();\r\n            } else {\r\n                this.setState({ mode: 'edit' });\r\n            }\r\n        });\r\n\r\n        // Input Fields\r\n        const titleInput = this.element.querySelector('.note-title-input');\r\n\r\n        // Input listeners (only in edit mode)\r\n        if (this.state.mode === 'edit') {\r\n            titleInput.focus()\r\n        }\r\n    }\r\n\r\n    beforeUnmount() { }\r\n\r\n    handleInput(e) {\r\n        const titleInput = this.element.querySelector('.note-title-input');\r\n        const bodyInput = this.element.querySelector('.note-content-input');\r\n        this.setState({\r\n            note: {\r\n                ...this.state.note,\r\n                title: titleInput?.value || '',\r\n                content: bodyInput?.value || ''\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSave() {\r\n        const notes = fetchNotes();\r\n        const titleInput = this.element.querySelector('.note-title-input');\r\n        const bodyInput = this.element.querySelector('.note-content-input');\r\n\r\n        if (titleInput.value.trim() && bodyInput.value.trim()) {\r\n            const idx = notes.findIndex(note => note.id === this.noteId);\r\n            if (idx !== -1) {\r\n                notes[idx] = {\r\n                    ...notes[idx],\r\n                    title: titleInput.value.trim(),\r\n                    content: bodyInput.value.trim(),\r\n                    date: fetchCurrentDate(),\r\n                    time: fetchCurrentTime(),\r\n                };\r\n                this.setState({ note: notes[idx] });\r\n            }\r\n            localStorage.setItem('take-me-notes-storage', JSON.stringify(notes));\r\n            this.setState({ mode: 'view' });\r\n        }\r\n    }\r\n\r\n    handleDelete() {\r\n        let notes = fetchNotes();\r\n        notes = notes.filter(n => n.id !== this.noteId);\r\n        localStorage.setItem('take-me-notes-storage', JSON.stringify(notes));\r\n        window.location.hash = '#/';\r\n    }\r\n}","import { screenReader } from './screenReader';\r\nimport { Splash } from '../components/Splash';\r\nimport { NoteDetailView } from '../views/NoteDetails';\r\n\r\n\r\nexport class Router {\r\n    constructor(routes = {}) {\r\n        this.routes = routes;\r\n        this.currentComponent = null;\r\n        this.container = null;\r\n    }\r\n\r\n    init(container) {\r\n        this.container = container;\r\n        window.addEventListener('hashchange', () => this.handleRoute());\r\n        this.handleRoute();\r\n    }\r\n\r\n    handleRoute() {\r\n        const hash = window.location.hash || '#/';\r\n        let route = this.routes[hash];\r\n\r\n        // Dynamic route matching for note details\r\n        if (!route) {\r\n            // Check for pattern: #/notes/:id\r\n            const noteDetailMatch = hash.match(/^#\\/notes\\/(.+)$/);\r\n            if (noteDetailMatch && this.routes['#/notes/:id']) {\r\n                route = this.routes['#/notes/:id'];\r\n            } else {\r\n                route = this.routes['#/'];\r\n            }\r\n        }\r\n\r\n        if (!route) return;\r\n\r\n        if (this.currentComponent) {\r\n            this.currentComponent.unmount();\r\n        }\r\n        this.container.innerHTML = '';\r\n\r\n        // Pass props if needed (like noteId)\r\n        if (hash.startsWith('#/notes/') && route.component === NoteDetailView) {\r\n            const noteId = hash.split('/')[2];\r\n            this.currentComponent = new route.component({ noteId });\r\n        } else {\r\n            this.currentComponent = new route.component();\r\n        }\r\n        this.currentComponent.mount(this.container);\r\n\r\n        document.title = route.title || '';\r\n    }\r\n\r\n    navigate(hash) {\r\n        window.location.hash = hash;\r\n    }\r\n}","import { Component } from './Component';\r\n\r\nexport class Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPath: window.location.hash || '#/'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return this.createElement(/* html */`\r\n            <nav class=\"bottom-nav\">\r\n                <div class=\"nav-fade\"></div>\r\n                <div class=\"nav-content\">\r\n                    <a href=\"#/\" class=\"nav-item ${this.state.currentPath === '#/' ? 'active' : ''}\" aria-label=\"Home\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" stroke-width=\"2\"/>\r\n                            <polyline points=\"9 22 9 12 15 12 15 22\" stroke-width=\"2\"/>\r\n                        </svg>\r\n                        <span>Home</span>\r\n                    </a>\r\n                    <a href=\"#/notes\" class=\"nav-item ${this.state.currentPath === '#/notes' ? 'active' : ''}\" aria-label=\"Notes\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" stroke-width=\"2\"/>\r\n                            <polyline points=\"14 2 14 8 20 8\" stroke-width=\"2\"/>\r\n                            <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" stroke-width=\"2\"/>\r\n                            <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" stroke-width=\"2\"/>\r\n                            <polyline points=\"10 9 9 9 8 9\" stroke-width=\"2\"/>\r\n                        </svg>\r\n                        <span>Notes</span>\r\n                    </a>\r\n                    <!--\r\n                    <a href=\"#/settings\" class=\"nav-item ${this.state.currentPath === '#/settings' ? 'active' : ''}\" aria-label=\"Settings\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <circle cx=\"12\" cy=\"12\" r=\"3\" stroke-width=\"2\"/>\r\n                            <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" stroke-width=\"2\"/>\r\n                        </svg>\r\n                        <span>Settings</span>\r\n                    </a> -->\r\n                </div>\r\n            </nav>\r\n        `);\r\n    }\r\n\r\n    afterMount() {\r\n        // Update active state on navigation\r\n        window.addEventListener('hashchange', () => {\r\n            const newPath = window.location.hash;\r\n            if (this.state.currentPath !== newPath) {\r\n                this.setState({ currentPath: newPath });\r\n            }\r\n        });\r\n    }\r\n\r\n    beforeUnmount() {\r\n        window.removeEventListener('hashchange', () => { });\r\n    }\r\n}","import { Component } from '../components/Component';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { fetchNotes, renderNoteDetails } from '../utils/Notes';\r\n\r\nexport class HomeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            recentNotes: fetchNotes() // We'll populate this later\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return this.createElement(/* html */`\r\n            <div class=\"home-view overflow-auto h-screen\">\r\n                <header class=\"express-header\">\r\n                    <h1 class=\"header-title\">Notes</h1>\r\n                    <a href=\"#/notes\" aria-label=\"Notes\" class=\"new-note-btn\" aria-label=\"Create new note\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M12 5v14M5 12h14\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                        </svg>\r\n                    </a>\r\n                </header>\r\n\r\n                <main class=\"notes-container\">\r\n                    <h2 class=\"section-title\">Recent Notes</h2>\r\n                    <div class=\"notes-grid\">\r\n                        ${this.state.recentNotes.length ?\r\n                this.state.recentNotes.map(note => this.renderNoteCard(note)).join('') :\r\n                this.renderEmptyState()\r\n            }\r\n                    </div>\r\n                </main>\r\n\r\n                ${new Navbar().render().outerHTML}\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    renderNoteCard(note) {\r\n        return /* html */`\r\n            <div class=\"note-card\" data-note-id=\"${note.id}\">\r\n                <div class=\"flex flex-col \">\r\n                    <h3 class=\"note-title\">${note.title}</h3>\r\n                    <p class=\"note-preview\">${note.content.substring(0, 99)}${note.content.length > 100 ? '...' : ''}</p>\r\n                    <div class=\"note-meta\">\r\n                        <span class=\"note-date text-gray-400 font-thin\">${note.date}</span>\r\n                    </div>\r\n                </div>\r\n                <button class=\"delete-note\" aria-label=\"Delete note\">\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                        <path d=\"M3 6h18M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" stroke-width=\"2\"/>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    renderEmptyState() {\r\n        return /* html */`\r\n            <div class=\"empty-state\">\r\n                <p>No notes yet</p>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    afterMount() {\r\n        // Handle note card clicks\r\n        this.element.addEventListener('click', (e) => {\r\n            const noteCard = e.target.closest('.note-card');\r\n            const deleteBtn = e.target.closest('.delete-note');\r\n\r\n            if (deleteBtn) {\r\n                e.stopPropagation();\r\n                const noteId = noteCard.dataset.noteId;\r\n                console.log(noteId);\r\n                this.handleDeleteNote(noteId);\r\n            } else if (noteCard) {\r\n                const noteId = noteCard.dataset.noteId;\r\n                this.handleNoteClick(noteId);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleNoteClick(noteId) {\r\n        renderNoteDetails(noteId)\r\n        window.location.hash = `#/notes/${noteId}`;\r\n    }\r\n\r\n    handleDeleteNote(noteId) {\r\n        let notes = fetchNotes();\r\n        notes = notes.filter(n => n.id !== noteId);\r\n        localStorage.setItem('take-me-notes-storage', JSON.stringify(notes));\r\n        this.setState({ recentNotes: fetchNotes() })\r\n    }\r\n}","import { Component } from '../components/Component';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { fetchCurrentDate, fetchCurrentTime } from '../utils/formatDate';\r\nimport { createNewNotes } from '../utils/Notes';\r\n\r\nexport class NotesView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: {\r\n                title: '',\r\n                content: ''\r\n            },\r\n            mode: 'edit' // or 'view'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return this.createElement(/* html */`\r\n            <div class=\"notes-view overflow-hidden h-screen\">\r\n                <header class=\"notes-header\">\r\n                    <button class=\"back-btn\" aria-label=\"Go back\">\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                            <path d=\"M19 12H5M12 19l-7-7 7-7\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <div class=\"header-actions\">\r\n                        ${this.state.mode === 'edit' ? /* html */`\r\n                            <button class=\"save-btn\">Done</button>\r\n                        ` : /* html */`\r\n                            <button class=\"edit-btn\">Edit</button>\r\n                        `}\r\n                    </div>\r\n                </header>\r\n\r\n                <main class=\"notes-content\">\r\n                    ${this.state.mode === 'edit' ? /* html */`\r\n                        <input type=\"text\" \r\n                               class=\"note-title-input\" \r\n                               placeholder=\"Note title\"\r\n                               value=\"${this.state.note.title}\"\r\n                        />\r\n                        <div class=\"editor-container\">\r\n                            <textarea class=\"note-content-input\" \r\n                                      placeholder=\"Start writing...\"\r\n                            >${this.state.note.content}</textarea>\r\n                        </div>\r\n                    ` : /* html */`\r\n                        <h1 class=\"note-title\">${this.state.note.title || 'Untitled'}</h1>\r\n                        <div class=\"note-content\">${this.state.note.content}</div>\r\n                    `}\r\n                </main>\r\n\r\n                ${new Navbar({ currentPath: '#/notes' }).render().outerHTML}\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    afterMount() {\r\n        // Handle back button\r\n        const backBtn = this.element.querySelector('.back-btn');\r\n        backBtn?.addEventListener('click', () => {\r\n            window.history.back();\r\n        });\r\n\r\n        // Handle mode switching\r\n        const saveBtn = this.element.querySelector('.save-btn');\r\n        const editBtn = this.element.querySelector('.edit-btn');\r\n        const titleInput = this.element.querySelector('.note-title-input')\r\n        const contentInput = this.element.querySelector('.note-content-input')\r\n\r\n        saveBtn?.addEventListener('click', () => {\r\n\r\n            if (titleInput.value.trim() && contentInput.value.trim()) {\r\n                const formData = {\r\n                    id: crypto.randomUUID(),\r\n                    title: titleInput.value.trim(),\r\n                    content: contentInput.value.trim(),\r\n                    date: fetchCurrentDate(),\r\n                    time: fetchCurrentTime(),\r\n                }\r\n\r\n                createNewNotes(formData)\r\n                this.setState({\r\n                    note: {\r\n                        title: titleInput.value,\r\n                        content: contentInput.value,\r\n                    }\r\n                })\r\n                window.location.hash = `#/notes/${formData.id}`\r\n                this.setState({ mode: 'view' });\r\n            }\r\n        });\r\n\r\n        editBtn?.addEventListener('click', () => {\r\n            this.setState({ mode: 'edit' });\r\n        });\r\n\r\n        // Auto-focus title if empty\r\n        if (!this.state.note.title) {\r\n            titleInput?.focus();\r\n        }\r\n    }\r\n}","import { Component } from './Component';\r\n\r\nexport class InstallButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInstallButton: false\r\n        };\r\n        this.deferredPrompt = null;\r\n        this.handleInstallClick = this.handleInstallClick.bind(this);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.showInstallButton) {\r\n            return null;\r\n        }\r\n\r\n        return this.createElement(`\r\n            <button class=\"install-button\" aria-label=\"Install app\">\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                    <path d=\"M19 9l-7 7-7-7\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                </svg>\r\n                Install App\r\n            </button>\r\n        `);\r\n    }\r\n\r\n    afterMount() {\r\n        // Listen for beforeinstallprompt event\r\n        window.addEventListener('beforeinstallprompt', (e) => {\r\n            // Prevent Chrome 76+ from automatically showing the prompt\r\n            e.preventDefault();\r\n            // Stash the event so it can be triggered later\r\n            this.deferredPrompt = e;\r\n            // Show the install button\r\n            this.setState({ showInstallButton: true });\r\n        });\r\n\r\n        // Add click handler to the button if it exists\r\n        if (this.element) {\r\n            this.element.addEventListener('click', this.handleInstallClick);\r\n        }\r\n    }\r\n\r\n    async handleInstallClick() {\r\n        if (!this.deferredPrompt) return;\r\n\r\n        // Show the install prompt\r\n        this.deferredPrompt.prompt();\r\n\r\n        // Wait for the user to respond to the prompt\r\n        const { outcome } = await this.deferredPrompt.userChoice;\r\n        console.log(`User response to the install prompt: ${outcome}`);\r\n\r\n        // Clear the deferredPrompt variable\r\n        this.deferredPrompt = null;\r\n\r\n        // Hide the button\r\n        this.setState({ showInstallButton: false });\r\n    }\r\n\r\n    beforeUnmount() {\r\n        if (this.element) {\r\n            this.element.removeEventListener('click', this.handleInstallClick);\r\n        }\r\n    }\r\n}","import { Component } from './scripts/components/Component';\r\nimport { Router } from './scripts/utils/Router';\r\nimport { HomeView } from './scripts/views/home';\r\nimport { NotesView } from './scripts/views/notes';\r\n// import { SettingsView } from './scripts/views/settings';\r\nimport { NoteDetailView } from './scripts/views/NoteDetails';\r\nimport { InstallButton } from './scripts/components/InstallButton'\r\n\r\n// ...existing imports...\r\n\r\nexport class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentView: null\r\n        };\r\n        this.router = new Router({\r\n            '#/': { component: HomeView, title: 'Take Me | Home' },\r\n            '#/notes': { component: NotesView, title: 'Take Me | Notes' },\r\n            '#/notes/:id': { component: NoteDetailView, title: 'Take Me | Note Detail' },\r\n        });\r\n        this.installButton = new InstallButton();\r\n    }\r\n\r\n    render() {\r\n        return this.createElement(/* html */`\r\n            <div class=\"app-container\">\r\n                <main id=\"main-content\">\r\n                    <div id=\"view-container\"></div>\r\n                </main>\r\n                ${this.installButton.render()?.outerHTML || ''}\r\n            </div>\r\n        `);\r\n    }\r\n\r\n    afterMount() {\r\n        const viewContainer = this.element.querySelector('#view-container');\r\n        this.router.init(viewContainer);\r\n        this.installButton.afterMount();\r\n    }\r\n\r\n    beforeUnmount() {\r\n        this.installButton.beforeUnmount();\r\n    }\r\n}\r\n\r\nexport default App","import './assets/css/style.css';\nimport './assets/css/custom.css';\nimport App from './App.js';\n\n// Register service worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js', {\n      type: 'module'\n    })\n      .then(registration => {\n        console.log('SW registered:', registration);\n      })\n      .catch(error => {\n        console.log('SW registration failed:', error);\n      });\n  });\n}\n\nclass AppContainer {\n  constructor() {\n    this.app = null;\n    this.root = document.getElementById('app');\n    this.currentModuleId = null;\n  }\n\n  mount(ModuleClass = App) {\n    this.unmount();\n    this.app = new ModuleClass();\n    this.app.mount(this.root);\n    this.currentModuleId = ModuleClass.id;\n  }\n\n  unmount() {\n    if (this.app) {\n      this.app.beforeUnmount();\n      this.root.innerHTML = '';\n      this.app = null;\n    }\n  }\n}\n\nconst container = new AppContainer();\ncontainer.mount();\n\n// if (import.meta.hot) {\n//   // Clear module cache on hot update\n//   import.meta.hot.dispose(() => {\n//     container.unmount();\n//   });\n\n//   import.meta.hot.accept('./App', async (newModule) => {\n//     if (newModule) {\n//       // Force reload the module\n//       const module = await import('./App?t=' + Date.now());\n//       container.mount(module.default);\n//     } else {\n//       // Fallback to current module\n//       container.mount();\n//     }\n//   });\n// }"],"names":["Component","props","newState","template","wrapper","container","newElement","ScreenReader","region","title","description","currentDate","fetchCurrentDate","year","month","day","fetchCurrentTime","hours","minutes","seconds","fetchNotes","createNewNotes","noteData","notes","note","NoteDetailView","titleInput","e","bodyInput","idx","n","Router","routes","hash","route","noteId","Navbar","newPath","HomeView","noteCard","NotesView","saveBtn","editBtn","contentInput","formData","InstallButton","outcome","App","viewContainer","registration","error","AppContainer","ModuleClass"],"mappings":"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"}